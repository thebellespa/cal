// Ïù¥ÎØ∏ÏßÄ ‚Üí base64 Î≥ÄÌôò
function imgToBase64(img, callback) {
  const canvas = document.createElement('canvas');
  canvas.width = img.naturalWidth;
  canvas.height = img.naturalHeight;
  const ctx = canvas.getContext('2d');
  ctx.drawImage(img, 0, 0);
  callback(canvas.toDataURL('image/jpeg'));
}

// ÌååÏùº ‚Üí base64 Î≥ÄÌôò
function fileToBase64(file, callback) {
  const reader = new FileReader();
  reader.onload = () => callback(reader.result);
  reader.readAsDataURL(file);
}

// Gemini API Ìò∏Ï∂ú
async function fetchCalorieInfo(base64img) {
  const prompt = `Ïù¥ Ïù¥ÎØ∏ÏßÄÎäî Ïñ¥Îñ§ ÏùåÏãùÏù¥Í≥†, ÏòàÏÉÅ ÏπºÎ°úÎ¶¨Îäî Î™á kcalÏù∏ÏßÄ ÏïåÎ†§Ï§ò.\n- ÏùåÏãùÎ™Ö\n- ÏòàÏÉÅ ÏπºÎ°úÎ¶¨(kcal)\n- Ïñ¥Îñ§ Í≥ÑÏÇ∞Í≥ºÏ†ïÏùÑ Í±∞Ï≥§ÎäîÏßÄ bullet ÌòïÌÉúÎ°ú\n- Ïù¥ ÏπºÎ°úÎ¶¨Î•º ÌÉúÏö∞Í∏∞ ÏúÑÌïú Ïö¥ÎèôÎüâ(Ïòà: Îã¨Î¶¨Í∏∞, Îì±ÏÇ∞ Îì±)\n- ÎãµÎ≥ÄÏùÄ JSON ÌòïÏãùÏúºÎ°ú: {food: ÏùåÏãùÎ™Ö, calorie: Ïà´Ïûê, detail: [Í≥ÑÏÇ∞Í≥ºÏ†ï bullet], exercise: "Ïö¥ÎèôÎüâ"}`;
  const body = {
    contents: [{
      parts: [
        { text: prompt },
        { inlineData: { mimeType: "image/jpeg", data: base64img.split(',')[1] } }
      ]
    }],
    generationConfig: { temperature: 0.2, topK: 1, topP: 1 }
  };
  const res = await fetch(
    'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=' + GEMINI_API_KEY,
    {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body)
    }
  );
  const data = await res.json();
  try {
    const text = data.candidates[0].content.parts[0].text;
    const json = JSON.parse(text.match(/\{[\s\S]*\}/)[0]);
    return json;
  } catch (e) {
    return { food: 'Ïïå Ïàò ÏóÜÏùå', calorie: '-', detail: ['Î∂ÑÏÑù Ïã§Ìå®'], exercise: '-' };
  }
}

// Ïö¥ÎèôÎüâ Ïù¥Î™®Ìã∞ÏΩò Îß§Ïπ≠
function getExerciseEmoji(text) {
  if (!text) return '';
  let emoji = '';
  if (/Îã¨Î¶¨Í∏∞|run/i.test(text)) emoji = 'üèÉ';
  else if (/Í±∑Í∏∞|walk/i.test(text)) emoji = 'üö∂';
  else if (/Îì±ÏÇ∞|hiking|mountain/i.test(text)) emoji = 'ü•æ';
  else if (/ÏûêÏ†ÑÍ±∞|cycle|bike/i.test(text)) emoji = 'üö¥';
  else if (/ÏàòÏòÅ|swim/i.test(text)) emoji = 'üèä';
  else if (/Ï§ÑÎÑòÍ∏∞|jump/i.test(text)) emoji = 'ü§∏';
  else if (/ÏöîÍ∞Ä|yoga/i.test(text)) emoji = 'üßò';
  else if (/Ïä§ÏøºÌä∏|squat/i.test(text)) emoji = 'üèãÔ∏è';
  else if (/Í≥ÑÎã®|stair/i.test(text)) emoji = 'ü™ú';
  else emoji = 'üí™';
  return emoji + ' ' + text;
}

// Í≤∞Í≥º ÌëúÏãú
function showResult({ food, calorie, detail, exercise, img }) {
  document.getElementById('foodName').textContent = food;
  document.getElementById('calorie').textContent = calorie + ' kcal';
  const ul = document.getElementById('calculationDetail');
  ul.innerHTML = '';
  (detail || []).forEach(b => {
    const li = document.createElement('li');
    li.textContent = b;
    ul.appendChild(li);
  });
  document.getElementById('exercise').textContent = 'Ïö¥ÎèôÎüâ: ' + getExerciseEmoji(exercise);
  document.getElementById('result').style.display = 'block';
  const resultImg = document.getElementById('resultImg');
  if (img) {
    resultImg.src = img;
    resultImg.style.display = 'block';
  } else {
    resultImg.style.display = 'none';
  }
}

// Î≥µÏÇ¨ Í∏∞Îä•
function copyResult() {
  const food = document.getElementById('foodName').textContent;
  const cal = document.getElementById('calorie').textContent;
  const detail = Array.from(document.querySelectorAll('#calculationDetail li')).map(li => '- ' + li.textContent).join('\n');
  const ex = document.getElementById('exercise').textContent;
  const text = `${food}\n${cal}\n${detail}\n${ex}`;
  navigator.clipboard.writeText(text);
  document.getElementById('copyBtn').textContent = 'Î≥µÏÇ¨Îê®!';
  setTimeout(() => { document.getElementById('copyBtn').textContent = 'Í≤∞Í≥º Î≥µÏÇ¨'; }, 1200);
}

document.querySelectorAll('.main-sample-img, .sample-img').forEach(img => {
  img.addEventListener('click', () => {
    imgToBase64(img, async (base64) => {
      document.getElementById('result').style.display = 'none';
      showResult({ food: 'Î∂ÑÏÑù Ï§ë...', calorie: '', detail: [], exercise: '', img: base64 });
      const result = await fetchCalorieInfo(base64);
      showResult({ ...result, img: base64 });
    });
  });
});

document.getElementById('fileInput').addEventListener('change', e => {
  const file = e.target.files[0];
  if (!file) return;
  fileToBase64(file, async (base64) => {
    document.getElementById('result').style.display = 'none';
    showResult({ food: 'Î∂ÑÏÑù Ï§ë...', calorie: '', detail: [], exercise: '', img: base64 });
    const result = await fetchCalorieInfo(base64);
    showResult({ ...result, img: base64 });
  });
});

document.getElementById('copyBtn').addEventListener('click', copyResult); 